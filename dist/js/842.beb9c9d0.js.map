{"version":3,"file":"js/842.beb9c9d0.js","mappings":"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","sources":["webpack://dumpster-diving-ionic/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://dumpster-diving-ionic/./node_modules/es5-ext/global.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/lib/version.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/lib/version.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/lib/cookies.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/GoTrueApi.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/lib/types.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestTransformBuilder.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestFilterBuilder.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestQueryBuilder.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestRpcBuilder.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/lib/version.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/lib/constants.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/lib/version.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/lib/push.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/RealtimeSubscription.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseRealtimeClient.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseQueryBuilder.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/storage-js/dist/module/lib/version.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/storage-js/dist/module/lib/constants.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/storage-js/dist/module/lib/StorageBucketApi.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/storage-js/dist/module/lib/StorageFileApi.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/storage-js/dist/module/SupabaseStorageClient.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","webpack://dumpster-diving-ionic/./node_modules/@supabase/supabase-js/dist/module/index.js","webpack://dumpster-diving-ionic/./src/supabase.js","webpack://dumpster-diving-ionic/./node_modules/websocket/lib/browser.js","webpack://dumpster-diving-ionic/./node_modules/websocket/lib/version.js"],"sourcesContent":["var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","export const version = '1.31.1';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\nexport const STORAGE_KEY = 'supabase.auth.token';\n//# sourceMappingURL=constants.js.map","// helpers.ts\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'text/plain;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return params;\n};\nfunction _handleRequest(fetcher, method, url, options, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options);\n    });\n}\nexport function post(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, body);\n    });\n}\nexport function put(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, body);\n    });\n}\nexport function remove(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","// generated by genversion\nexport const version = '1.22.5';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 60 * 1000;\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const COOKIE_OPTIONS = {\n    name: 'sb',\n    lifetime: 60 * 60 * 8,\n    domain: '',\n    path: '/',\n    sameSite: 'lax',\n};\n//# sourceMappingURL=constants.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    return strCookies;\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","import crossFetch from 'cross-fetch';\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookies, getCookieString } from './lib/cookies';\nimport { expiresAt, resolveFetch } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    cookieName() {\n        var _a;\n        return (_a = this.cookieOptions.name) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/signup${queryString}`, {\n                    email,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { email, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Signs up a new user using their phone number and a password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     * @param data Optional user metadata.\n     */\n    signUpWithPhone(phone, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/signup`, {\n                    phone,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their phone number and password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     */\n    signInWithPhone(phone, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=password';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { phone, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an OpenID Connect user using their id_token.\n     * @param id_token The IDToken of the user.\n     * @param nonce The nonce of the user. The nonce is a random value generated by the developer (= yourself) before the initial grant is started. You should check the OpenID Connect specification for details. https://openid.net/developers/specs/\n     * @param provider The provider of the user.\n     * @param client_id The clientID of the user.\n     * @param issuer The issuer of the user.\n     */\n    signInWithOpenIDConnect({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=id_token';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { id_token, nonce, client_id, issuer, provider }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const shouldCreateUser = options.shouldCreateUser ? options.shouldCreateUser : true;\n                const data = yield post(this.fetch, `${this.url}/otp${queryString}`, {\n                    email,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n     * @param phone The user's phone number WITH international prefix\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     */\n    sendMobileOTP(phone, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const shouldCreateUser = options.shouldCreateUser ? options.shouldCreateUser : true;\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/otp`, {\n                    phone,\n                    create_user: shouldCreateUser,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(this.fetch, `${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (e) {\n                return { error: e };\n            }\n        });\n    }\n    /**\n     * Send User supplied Mobile OTP to be verified\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyMobileOTP(phone, token, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { phone, token, type: 'sms', redirect_to: options.redirectTo }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/invite${queryString}`, { email, data: options.data }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/recover${queryString}`, { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     * @param req The request object.\n     * @param res The response object.\n     */\n    setAuthCookie(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookies(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        res.status(200).json({});\n    }\n    /**\n     * Deletes the Auth Cookies and redirects to the\n     * @param req The request object.\n     * @param res The response object.\n     * @param options Optionally specify a `redirectTo` URL in the options.\n     */\n    deleteAuthCookie(req, res, { redirectTo = '/' }) {\n        setCookies(req, res, ['access-token', 'refresh-token'].map((key) => ({\n            name: `${this.cookieName()}-${key}`,\n            value: '',\n            maxAge: -1,\n        })));\n        return res.redirect(307, redirectTo);\n    }\n    /**\n     * Helper method to generate the Auth Cookie string for you in case you can't use `setAuthCookie`.\n     * @param req The request object.\n     * @param res The response object.\n     * @returns The Cookie string that needs to be set as the value for the `Set-Cookie` header.\n     */\n    getAuthCookieString(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            return getCookieString(req, res, [\n                { key: 'access-token', value: session.access_token },\n                { key: 'refresh-token', value: session.refresh_token },\n            ].map((token) => {\n                var _a;\n                return ({\n                    name: `${this.cookieName()}-${token.key}`,\n                    value: token.value,\n                    domain: this.cookieOptions.domain,\n                    maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                    path: this.cookieOptions.path,\n                    sameSite: this.cookieOptions.sameSite,\n                });\n            }));\n        }\n        if (event === 'SIGNED_OUT') {\n            return getCookieString(req, res, ['access-token', 'refresh-token'].map((key) => ({\n                name: `${this.cookieName()}-${key}`,\n                value: '',\n                maxAge: -1,\n            })));\n        }\n        return res.getHeader('Set-Cookie');\n    }\n    /**\n     * Generates links to be sent via email or other.\n     * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     * @param email The user's email.\n     * @param password User password. For signup only.\n     * @param data Optional user metadata. For signup only.\n     * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     */\n    generateLink(type, email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/generate_link`, {\n                    type,\n                    email,\n                    password: options.password,\n                    data: options.data,\n                    redirect_to: options.redirectTo,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param attributes The data you want to create the user with.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/users`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                return { data: data.users, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies) {\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                }\n                const access_token = req.cookies[`${this.cookieName()}-access-token`];\n                const refresh_token = req.cookies[`${this.cookieName()}-refresh-token`];\n                if (!access_token) {\n                    throw new Error('No cookie found!');\n                }\n                const { user, error: getUserError } = yield this.getUser(access_token);\n                if (getUserError) {\n                    if (!refresh_token)\n                        throw new Error('No refresh_token cookie found!');\n                    if (!res)\n                        throw new Error('You need to pass the res object to automatically refresh the session!');\n                    const { data, error } = yield this.refreshAccessToken(refresh_token);\n                    if (error) {\n                        throw error;\n                    }\n                    else if (data) {\n                        setCookies(req, res, [\n                            { key: 'access-token', value: data.access_token },\n                            { key: 'refresh-token', value: data.refresh_token },\n                        ].map((token) => {\n                            var _a;\n                            return ({\n                                name: `${this.cookieName()}-${token.key}`,\n                                value: token.value,\n                                domain: this.cookieOptions.domain,\n                                maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                                path: this.cookieOptions.path,\n                                sameSite: this.cookieOptions.sameSite,\n                            });\n                        }));\n                        return { token: data.access_token, user: data.user, data: data.user, error: null };\n                    }\n                }\n                return { token: access_token, user: user, data: user, error: null };\n            }\n            catch (e) {\n                return { token: null, user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this; //\n                const data = yield put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param uid The user uid you want to remove.\n     */\n    deleteUser(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/admin/users/${uid}`, {}, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Gets the current user details.\n     *\n     * This method is called by the GoTrueClient `update` where\n     * the jwt is set to this.currentSession.access_token\n     * and therefore, acts like getting the currently authenticated used\n     *\n     * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/user`, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.cookieOptions\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.multiTab = settings.multiTab;\n        this.localStorage = settings.localStorage || globalThis.localStorage;\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n            fetch: settings.fetch,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        this._listenForMultiTabEvents();\n        if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n            // Handle the OAuth redirect\n            this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n                if (error) {\n                    console.error('Error getting session from URL.', error);\n                }\n            });\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param phone The user's phone number.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     */\n    signUp({ email, password, phone }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = phone && password\n                    ? yield this.api.signUpWithPhone(phone, password, {\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    })\n                    : yield this.api.signUpWithEmail(email, password, {\n                        redirectTo: options.redirectTo,\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param shouldCreateUser A boolean flag to indicate whether to automatically create a user on magiclink / otp sign-ins if the user doesn't exist. Defaults to true.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, phone, password, refreshToken, provider, oidc }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (phone && !password) {\n                    const { error } = yield this.api.sendMobileOTP(phone, {\n                        shouldCreateUser: options.shouldCreateUser,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (phone && password) {\n                    return this._handlePhoneSignIn(phone, password);\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                    });\n                }\n                if (oidc) {\n                    return this._handleOpenIDConnectSignIn(oidc);\n                }\n                throw new Error(`You must provide either an email, phone number, a third-party provider or OpenID Connect.`);\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP({ phone, token }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.verifyMobileOTP(phone, token, options);\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (e) {\n                return { error: e, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: null });\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    const recoveryMode = getParameterByName('type');\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (recoveryMode === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    this.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (e) {\n            return { data: null, error: e };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handlePhoneSignIn(phone, password) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithPhone(phone, password);\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (e) {\n            // fallback to returning the URL\n            if (url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error: e };\n        }\n    }\n    _handleOpenIDConnectSignIn({ id_token, nonce, client_id, issuer, provider, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (id_token && nonce && ((client_id && issuer) || provider)) {\n                try {\n                    const { data, error } = yield this.api.signInWithOpenIDConnect({\n                        id_token,\n                        nonce,\n                        client_id,\n                        issuer,\n                        provider,\n                    });\n                    if (error || !data)\n                        return { user: null, session: null, error };\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    return { user: data.user, session: data, error: null };\n                }\n                catch (e) {\n                    return { user: null, session: null, error: e };\n                }\n            }\n            throw new Error(`You must provide a OpenID Connect provider with your id token and nonce.`);\n        });\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        var _a;\n        try {\n            const json = isBrowser() && ((_a = this.localStorage) === null || _a === void 0 ? void 0 : _a.getItem(STORAGE_KEY));\n            if (!json || typeof json !== 'string') {\n                return null;\n            }\n            const data = JSON.parse(json);\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const json = isBrowser() && (yield this.localStorage.getItem(STORAGE_KEY));\n                if (!json) {\n                    return null;\n                }\n                const data = JSON.parse(json);\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession || !currentSession.user) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            isBrowser() && (yield this.localStorage.removeItem(STORAGE_KEY));\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            // console.debug('Auth multi-tab support is disabled.')\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                        this._recoverAndRefresh();\n                        this._notifyAllSubscribers('SIGNED_IN');\n                    }\n                    else {\n                        this._removeSession();\n                        this._notifyAllSubscribers('SIGNED_OUT');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n        }\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport class PostgrestBuilder {\n    constructor(builder) {\n        Object.assign(this, builder);\n        let _fetch;\n        if (builder.fetch) {\n            _fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            _fetch = crossFetch;\n        }\n        else {\n            _fetch = fetch;\n        }\n        this.fetch = (...args) => _fetch(...args);\n        this.shouldThrowOnError = builder.shouldThrowOnError || false;\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError(throwOnError) {\n        if (throwOnError === null || throwOnError === undefined) {\n            throwOnError = true;\n        }\n        this.shouldThrowOnError = throwOnError;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        let res = this.fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                }\n                catch (_d) {\n                    error = {\n                        message: body,\n                    };\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status: res.status,\n                statusText: res.statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                body: null,\n                count: null,\n                status: 400,\n                statusText: 'Bad Request',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Sets the AbortSignal for the fetch request.\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        const _this = new PostgrestTransformBuilder(this);\n        _this.then = ((onfulfilled, onrejected) => this.then((res) => {\n            var _a, _b;\n            if ((_b = (_a = res.error) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.includes('Results contain 0 rows')) {\n                return onfulfilled({\n                    error: null,\n                    data: null,\n                    count: res.count,\n                    status: 200,\n                    statusText: 'OK',\n                    body: null,\n                });\n            }\n            return onfulfilled(res);\n        }, onrejected));\n        return _this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, shouldThrowOnError, } = {}) {\n        super({ fetch, shouldThrowOnError });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","// generated by genversion\nexport const version = '0.37.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema, fetch, throwOnError, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n        this.shouldThrowOnError = throwOnError;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        }).rpc(params, { head, count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","// generated by genversion\nexport const version = '1.3.6';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        this.channel.on(this.refEvent, (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        });\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel.off(this.refEvent);\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, } from './lib/constants';\nimport Timer from './lib/timer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nimport Serializer from './lib/serializer';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = WebSocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                    // remove open handles\n                    this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n                    this.reconnectTimer.reset();\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error: error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message. Override `this.logger` for specialized logging.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callbacks for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return 'connecting';\n            case SOCKET_STATES.open:\n                return 'open';\n            case SOCKET_STATES.closing:\n                return 'closing';\n            default:\n                return 'closed';\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === 'open';\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = {}) {\n        let chan = new RealtimeSubscription(topic, chanParams, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    push(data) {\n        let { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        try {\n            this.channels.forEach((channel) => {\n                token && channel.updateJoinPayload({ user_token: token });\n                if (channel.joinedOnce && channel.isJoined()) {\n                    channel.push(CHANNEL_EVENTS.access_token, { access_token: token });\n                }\n            });\n        }\n        catch (error) {\n            console.log('setAuth error', error);\n        }\n    }\n    leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n                errors: payload.errors,\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, fetch, shouldThrowOnError, }) {\n        super(url, { headers, schema, fetch, shouldThrowOnError });\n        this._subscription = null;\n        this._realtime = realtime;\n        this._headers = headers;\n        this._schema = schema;\n        this._table = table;\n    }\n    /**\n     * Subscribe to realtime changes in your database.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        if (!this._subscription) {\n            this._subscription = new SupabaseRealtimeClient(this._realtime, this._headers, this._schema, this._table);\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","// generated by genversion\nexport const version = '0.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","import crossFetch from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from './constants';\nimport { get, post, put, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nexport class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing product.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport { resolveFetch } from './helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Copies an existing file.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed URL to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Create signed URLs to download files without requiring permissions. These URLs can be valid for a set number of seconds.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     */\n    createSignedUrls(paths, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedURL: datum.signedURL ? `${this.url}${datum.signedURL}` : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class SupabaseStorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=SupabaseStorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${_supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.schema = settings.schema;\n        this.multiTab = settings.multiTab;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.shouldThrowOnError = settings.shouldThrowOnError || false;\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this._listenForAuthEvents();\n        this._listenForMultiTabEvents();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n            shouldThrowOnError: this.shouldThrowOnError,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Closes and removes all subscriptions and returns a list of removed\n     * subscriptions and their errors.\n     */\n    removeAllSubscriptions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allSubs = this.getSubscriptions().slice();\n            const allSubPromises = allSubs.map((sub) => this.removeSubscription(sub));\n            const allRemovedSubs = yield Promise.all(allSubPromises);\n            return allRemovedSubs.map(({ error }, i) => {\n                return {\n                    data: { subscription: allSubs[i] },\n                    error,\n                };\n            });\n        });\n    }\n    /**\n     * Closes and removes a subscription and returns the number of open subscriptions.\n     *\n     * @param subscription The subscription you want to close and remove.\n     */\n    removeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(subscription);\n            const allSubs = this.getSubscriptions();\n            const openSubCount = allSubs.filter((chan) => chan.isJoined()).length;\n            if (allSubs.length === 0)\n                yield this.realtime.disconnect();\n            return { data: { openSubscriptions: openSubCount }, error };\n        });\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let error = null;\n            if (!subscription.isClosed()) {\n                const { error: unsubError } = yield this._unsubscribeSubscription(subscription);\n                error = unsubError;\n            }\n            this.realtime.remove(subscription);\n            return { error };\n        });\n    }\n    _unsubscribeSubscription(subscription) {\n        return new Promise((resolve) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => resolve({ error: null }))\n                .receive('error', (error) => resolve({ error }))\n                .receive('timeout', () => resolve({ error: new Error('timed out') }));\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n            throwOnError: this.shouldThrowOnError,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = this.headers;\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = `Bearer ${authBearer}`;\n        return headers;\n    }\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return null;\n        }\n        try {\n            return window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a, _b, _c;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                    const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n                    if (!accessToken) {\n                        this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n                    }\n                    else if (!previousAccessToken && accessToken) {\n                        this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n                    }\n                    else if (previousAccessToken !== accessToken) {\n                        this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n            return null;\n        }\n    }\n    _listenForAuthEvents() {\n        let { data } = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token);\n            // Ideally we should call this.auth.recoverSession() - need to make public\n            // to trigger a \"SIGNED_IN\" event on this client.\n            if (source == 'STORAGE')\n                this.auth.setAuth(token);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'https://fxcebsajvdlnwpmmodab.supabase.co'\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTY0MTQ1NzczMSwiZXhwIjoxOTU3MDMzNzMxfQ.gt2mp51qKMtSPdwjIEQGionSAPecpBcov2EyEiaa9EA'\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["global","self","this","__self__","F","fetch","DOMException","prototype","exports","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","isDataView","obj","DataView","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","get","type","rejected","Error","then","text","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","signal","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","naiveFallback","window","globalThis","configurable","__global__","version","DEFAULT_HEADERS","STORAGE_KEY","stripTrailingSlash","isBrowser","__awaiter","_arguments","P","generator","adopt","fulfilled","step","apply","_getErrorMessage","msg","error_description","stringify","handleError","_getRequestParams","params","assign","_handleRequest","fetcher","noResolveJson","data","catch","post","put","remove","GOTRUE_URL","COOKIE_OPTIONS","lifetime","domain","path","sameSite","serialize","val","opt","enc","encodeURIComponent","fieldContentRegExp","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","secure","isSecureEnvironment","req","host","endsWith","serializeCookie","cookie","_a","_b","_c","Date","now","getCookieString","res","cookies","strCookies","c","previousCookies","getHeader","setCookies","setHeader","expiresAt","expiresIn","timeNow","round","r","random","v","getParameterByName","href","regex","RegExp","results","exec","resolveFetch","customFetch","_fetch","args","GoTrueApi","cookieOptions","_createRequestHeaders","jwt","cookieName","getUrlForProvider","provider","urlParams","redirectTo","scopes","signUpWithEmail","email","password","queryString","gotrue_meta_security","hcaptcha_token","captchaToken","session","expires_in","expires_at","signInWithEmail","signUpWithPhone","phone","signInWithPhone","signInWithOpenIDConnect","id_token","nonce","client_id","issuer","sendMagicLinkEmail","shouldCreateUser","create_user","sendMobileOTP","signOut","verifyMobileOTP","token","redirect_to","inviteUserByEmail","resetPasswordForEmail","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","end","event","access_token","deleteAuthCookie","getAuthCookieString","generateLink","createUser","attributes","user","listUsers","users","getUserById","uid","getUserByCookie","getUserError","getUser","updateUserById","deleteUser","updateUser","polyfillGlobalThis","__magic__","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","GoTrueClient","stateChangeEmitters","Map","settings","currentUser","currentSession","localStorage","api","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","getSessionFromUrl","storeSession","console","signUp","_removeSession","_saveSession","_notifyAllSubscribers","id","signIn","oidc","_handleEmailSignIn","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","_handleOpenIDConnectSignIn","verifyOTP","refreshSession","update","setSession","setAuth","token_type","provider_token","parseInt","recoveryMode","hash","accessToken","onAuthStateChange","subscription","unsubscribe","delete","confirmed_at","email_confirmed_at","phone_confirmed_at","getItem","log","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","refreshTokenTimer","clearTimeout","removeItem","setTimeout","unref","newSession","newValue","SupabaseAuthClient","super","PostgrestBuilder","builder","shouldThrowOnError","throwOnError","onfulfilled","onrejected","schema","includes","count","isReturnMinimal","countHeader","match","contentRange","_d","postgrestResponse","fetchError","details","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","from","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","_this","csv","PostgrestFilterBuilder","arguments","cs","contains","cd","containedBy","sl","rangeLt","sr","rangeGt","nxl","rangeGte","nxr","rangeLte","adj","rangeAdjacent","ov","overlaps","not","operator","or","filters","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","cleanedValues","s","textSearch","query","config","typePart","configPart","fts","plfts","phfts","wfts","filter","PostgrestQueryBuilder","URL","head","insert","upsert","onConflict","returning","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","Set","ignoreDuplicates","PostgrestRpcBuilder","rpc","PostgrestClient","auth","table","fn","PostgresTypes","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","openBrace","arr","valTrim","_","VSN","DEFAULT_TIMEOUT","WS_CLOSE_NORMAL","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","Timer","timerCalc","timer","tries","reset","scheduleTimeout","Push","channel","payload","timeout","sent","timeoutTimer","ref","receivedResp","recHooks","refEvent","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","topic","updatePayload","receive","makeRef","replyEventName","on","_cancelTimeout","_matchReceive","trigger","destroy","off","h","RealtimeSubscription","bindings","state","closed","joinedOnce","pushBuffer","joinPush","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","onClose","joinRef","onError","reason","isLeaving","isClosed","errored","isJoining","reply","isConnected","rejoin","subscribe","close","bind","canPush","isJoined","updateJoinPayload","leaving","leavePush","leave","onMessage","isMember","leaveOpenTopic","joining","events","handledPayload","isErrored","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","RealtimeClient","endPoint","channels","transport","heartbeatIntervalMs","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","websocket","encode","reconnectTimer","disconnect","connect","endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","_reject","clearInterval","kind","onOpen","connectionState","connecting","closing","chanParams","chan","rawMessage","_appendParams","vsn","newRef","user_token","dupChannel","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","SupabaseRealtimeClient","tableName","userToken","getPayloadRecords","records","new","old","old_record","enrichedPayload","commit_timestamp","eventType","errors","SupabaseQueryBuilder","realtime","_subscription","_realtime","_headers","_schema","_table","parameters","StorageBucketApi","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","Key","upload","move","fromPath","toPath","sourceKey","destinationKey","copy","createSignedUrl","signedURL","createSignedUrls","paths","datum","download","getPublicUrl","publicURL","prefixes","list","SupabaseStorageClient","SupabaseClient","supabaseUrl","supabaseKey","_supabaseUrl","restUrl","realtimeUrl","authUrl","storageUrl","_initSupabaseAuthClient","_initRealtimeClient","_listenForAuthEvents","storage","_getAuthHeaders","rest","_initPostgRESTClient","removeAllSubscriptions","allSubs","getSubscriptions","allSubPromises","sub","removeSubscription","allRemovedSubs","all","_closeSubscription","openSubCount","openSubscriptions","unsubError","_unsubscribeSubscription","authHeaders","Authorization","apikey","authBearer","previousAccessToken","_handleTokenChanged","source","changedAccessToken","createClient","supabaseAnonKey","supabase","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","native_instance","prop"],"sourceRoot":""}