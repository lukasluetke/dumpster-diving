{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, createVNode as _createVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0832cc81\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" test reset \");\n\nconst _hoisted_2 = {\n  key: 0\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Heute noch nicht besucht \");\n\nconst _hoisted_4 = {\n  key: 1\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" FÃ¼r heute schon alles gerettet \");\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  key: 2\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\" Hier gibts noch was \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_button = _resolveComponent(\"ion-button\");\n\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\");\n\n  const _component_ion_col = _resolveComponent(\"ion-col\");\n\n  const _component_ion_icon = _resolveComponent(\"ion-icon\");\n\n  const _component_ion_label = _resolveComponent(\"ion-label\");\n\n  const _component_ion_chip = _resolveComponent(\"ion-chip\");\n\n  const _component_ion_row = _resolveComponent(\"ion-row\");\n\n  const _component_ion_grid = _resolveComponent(\"ion-grid\");\n\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\");\n\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\");\n\n  const _component_ion_card = _resolveComponent(\"ion-card\");\n\n  const _component_ion_content = _resolveComponent(\"ion-content\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Sheet Modal \"), _createVNode(_component_ion_content, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.spot, item => {\n      return _openBlock(), _createBlock(_component_ion_button, {\n        key: item.name,\n        onClick: $event => _ctx.reset(item.status, item.last_status_change, item.time)\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    )), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.spot, item => {\n      return _openBlock(), _createBlock(_component_ion_card, {\n        class: \"card\",\n        key: item.name\n      }, {\n        default: _withCtx(() => [_createVNode(_component_ion_card_header, null, {\n          default: _withCtx(() => [_createVNode(_component_ion_grid, null, {\n            default: _withCtx(() => [_createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [_createVNode(_component_ion_col, null, {\n                default: _withCtx(() => [_createVNode(_component_ion_card_title, {\n                  class: \"title\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              ), _createVNode(_component_ion_col, {\n                class: \"time_chip\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_ion_chip, null, {\n                  default: _withCtx(() => [_createVNode(_component_ion_icon, {\n                    icon: _ctx.time,\n                    color: \"dark\"\n                  }, null, 8\n                  /* PROPS */\n                  , [\"icon\"]), _createVNode(_component_ion_label, null, {\n                    default: _withCtx(() => [_createTextVNode(\" Ab \" + _toDisplayString(item.time) + \" Uhr \", 1\n                    /* TEXT */\n                    )]),\n                    _: 2\n                    /* DYNAMIC */\n\n                  }, 1024\n                  /* DYNAMIC_SLOTS */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1024\n          /* DYNAMIC_SLOTS */\n          )]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        ), _createVNode(_component_ion_card_content, null, {\n          default: _withCtx(() => [_createVNode(_component_ion_grid, null, {\n            default: _withCtx(() => [_createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [_createVNode(_component_ion_col, null, {\n                default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString(item.description), 1\n                /* TEXT */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            ), _createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [_createVNode(_component_ion_col, null, {\n                default: _withCtx(() => [item.status == '1' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_ion_button, {\n                  class: \"button\",\n                  expand: \"block\",\n                  color: \"danger\",\n                  onClick: _ctx.presentActionSheet\n                }, {\n                  default: _withCtx(() => [_hoisted_3]),\n                  _: 1\n                  /* STABLE */\n\n                }, 8\n                /* PROPS */\n                , [\"onClick\"])])) : _createCommentVNode(\"v-if\", true), item.status == '2' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_ion_button, {\n                  class: \"button\",\n                  expand: \"block\",\n                  color: \"success\",\n                  onClick: _ctx.presentActionSheet\n                }, {\n                  default: _withCtx(() => [_hoisted_5]),\n                  _: 1\n                  /* STABLE */\n\n                }, 8\n                /* PROPS */\n                , [\"onClick\"]), _hoisted_6])) : _createCommentVNode(\"v-if\", true), item.status == '3' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_ion_button, {\n                  class: \"button\",\n                  expand: \"block\",\n                  color: \"warning\",\n                  onClick: _ctx.presentActionSheet\n                }, {\n                  default: _withCtx(() => [_hoisted_8]),\n                  _: 1\n                  /* STABLE */\n\n                }, 8\n                /* PROPS */\n                , [\"onClick\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" //// \")]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1024\n          /* DYNAMIC_SLOTS */\n          )]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1024\n      /* DYNAMIC_SLOTS */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  })], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","_createCommentVNode","_createVNode","_component_ion_content","_createElementBlock","_Fragment","_renderList","_ctx","item","_createBlock","_component_ion_button","key","name","onClick","status","last_status_change","time","_component_ion_card","class","_component_ion_card_header","_component_ion_grid","_component_ion_row","_component_ion_col","_component_ion_card_title","_component_ion_chip","_component_ion_icon","icon","color","_component_ion_label","_toDisplayString","_component_ion_card_content","description","_hoisted_2","expand","_hoisted_4","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["/home/pumuckl/Dokumente/code/ionic/dumpster-diving-ionic/src/views/SpotModal.vue"],"sourcesContent":["<template>\n    <!-- Sheet Modal -->\n        <ion-content>\n            <ion-button \n                v-for=\"item in spot\" \n                :key=\"item.name\"\n                @click=\"reset(item.status, item.last_status_change, item.time)\">\n                test reset\n            </ion-button>\n            <ion-card \n                class=\"card\" \n                v-for=\"item in spot\" \n                :key=\"item.name\">\n                <ion-card-header>\n                    <ion-grid>\n                        <ion-row>\n                        <ion-col>\n                            <ion-card-title class=\"title\">\n                            {{ item.name }}\n                            </ion-card-title>\n                        </ion-col>\n                        <ion-col class=\"time_chip\">\n                            <ion-chip>\n                                <ion-icon \n                                    :icon=\"time\" \n                                    color=\"dark\">\n                                </ion-icon>\n                                <ion-label>\n                                    Ab {{ item.time }} Uhr\n                                </ion-label>\n                            </ion-chip>\n                        </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-card-header>\n                <ion-card-content>\n                    <ion-grid>\n                        <ion-row>\n                            <ion-col>\n                                <p>\n                                    {{ item.description }}\n                                </p>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row>\n                            <ion-col>\n                                <div\n                                    v-if=\"item.status == '1'\">\n                                    <ion-button \n                                        class=\"button\"\n                                        expand=\"block\" \n                                        color=\"danger\"\n                                        @click=\"presentActionSheet\">\n                                        Heute noch nicht besucht\n                                    </ion-button>\n                                </div>\n                                <div\n                                    v-if=\"item.status == '2'\">\n                                  <ion-button \n                                      class=\"button\"\n                                      expand=\"block\" \n                                      color=\"success\"\n                                      @click=\"presentActionSheet\"\n                                      >\n                                      FÃ¼r heute schon alles gerettet\n                                  </ion-button>\n                                    <div>\n                                    </div>\n                                </div>\n                                <div\n                                    v-if=\"item.status == '3'\">\n                                  <ion-button \n                                      class=\"button\"\n                                      expand=\"block\" \n                                      color=\"warning\"\n                                      @click=\"presentActionSheet\"\n                                      >\n                                      Hier gibts noch was\n                                  </ion-button>\n                                    \n                                </div>\n                                <!-- //// -->\n                            </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-card-content>\n            </ion-card>\n        </ion-content>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { useCounterStore } from '@/stores/counter'\nimport { supabase } from \"@/supabase\"\nimport { time } from 'ionicons/icons';\nimport { IonContent, \n    IonCard, \n    IonCardContent, \n    IonCardHeader, \n    IonCardTitle, \n    IonButton, \n    actionSheetController,\n    IonIcon,\n    IonLabel,\n    IonChip,\n    IonCol, \n    IonGrid, \n    IonRow } from '@ionic/vue';\n\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {\n    IonContent,\n    IonCard, \n    IonCardContent, \n    IonCardHeader, \n    IonCardTitle,\n    IonButton,\n    IonIcon,\n    IonLabel,\n    IonChip,\n    IonCol, \n    IonGrid, \n    IonRow\n    },\n  data: () => ({\n    spot: [],\n    time_since_close_value: '',\n    time_since_change_value_millisec: '',\n    time_since_change_value_minutes: '',\n    jetzt_total_minutes: '',\n    last_status_change: '',\n    heute: '',\n    last_status_change_month: '',\n  }),\n  setup() {\n    return { time }\n  },\n  async created() {\n    const counter = useCounterStore()\n    console.log(counter.count)\n    const {data: events} = await supabase\n      .from('events')\n      .select('description,name,status,time,last_status_change')\n      .eq('id', counter.count)\n    console.log(events)\n    this.spot = events\n    this.reset()\n  },\n  methods: {\n    async presentActionSheet() {\n      const actionSheet = await actionSheetController\n        .create({\n          header: 'Status',\n          cssClass: 'my-custom-class',\n          buttons: [\n            {\n              text: 'Heute noch nicht besucht',\n              data: 10,  \n              handler: () => {\n                console.log('Share clicked')\n                this.changeStatus(1)\n              },\n            },\n            {\n              text: 'FÃ¼r heute schon alles gerettet',\n              data: 'Data value',\n              handler: () => {\n                console.log('Play clicked')\n                this.changeStatus(2)\n              },\n            },\n            {\n              text: 'Hier gibts noch was',\n              handler: () => {\n                console.log('Favorite clicked')\n                this.changeStatus(3)\n              },\n            },\n            {\n              text: 'Abbrechen',\n              role: 'cancel',\n              handler: () => {\n                console.log('Abbrechen clicked')\n              },\n            },\n          ],\n        });\n      await actionSheet.present();\n\n      const { role, data } = await actionSheet.onDidDismiss();\n      console.log('onDidDismiss resolved with role and data', role, data);\n    },\n    async changeStatus(future_status) {\n        console.log(future_status)\n        const counter = useCounterStore()\n        const { data: error } = await supabase\n            .from('events')\n            .update({ status: future_status, last_status_change: new Date() })\n            .eq('id', counter.count )\n        console.log(error)\n        const {data: events} = await supabase\n            .from('events')\n            .select('description,name,status,last_status_change')\n            .eq('id', counter.count)\n        console.log(events)\n        this.spot = events\n    },\n    reset(old_status, last_status_change, time) {\n        this.last_status_change = last_status_change\n        // const change_required = 0\n        if (old_status == 1) {\n          console.log('heute noch nicht besucht');\n        } else if (old_status == 2) {\n            this.time_since_close(time)\n        } else if (old_status == 3) {\n            this.time_since_close(time)\n        } else {\n            console.log('fehler. Der Wert ist nicht 1,2 oder 3');\n        }\n    },\n    time_since_close(time) {\n      console.log('time since close:')\n      // aktuelle Zeit:\n      this.heute = new Date();\n      const jetzt_hours = this.heute.getHours();\n      const jetzt_minutes = this.heute.getMinutes();\n      // Ladenschluss Zeit aufsplitten:\n      const time_split = time.split(':');\n      const time_hours = parseInt(time_split[0]);\n      const time_minutes = parseInt(time_split[1]);\n      // zeit in minuten\n      const time_total_minutes = (time_hours * 60) + time_minutes;\n      this.jetzt_total_minutes =(jetzt_hours * 60) + jetzt_minutes;\n      if (time_total_minutes > this.jetzt_total_minutes) {\n        this.time_since_close_value = 1440 - (time_total_minutes - this.jetzt_total_minutes)\n        console.log(this.time_since_close_value)\n        this.time_since_change()\n      }\n      else if (this.jetzt_total_minutes > time_total_minutes) {\n        this.time_since_close_value = this.jetzt_total_minutes - time_total_minutes\n        console.log(this.time_since_close_value)\n        this.time_since_change()\n      }\n      else if (time_total_minutes == this.jetzt_total_minutes) {\n        this.time_since_close_value = 0\n        console.log(this.time_since_close_value)\n        this.time_since_change()\n      }\n      else {\n        console.log('fehler')\n      }\n    },\n    time_since_change() {\n      console.log('time since change:')\n      const last_status_change_local = new Date(Date.parse(this.last_status_change) + (120 * 60000))\n      this.time_since_change_value_millisec = Date.parse(this.heute) - Date.parse(last_status_change_local)\n      this.time_since_change_value_minutes = this.time_since_change_value_millisec / 60000\n      console.log(this.time_since_change_value_minutes)\n      this.time_since_change_vs_time_since_close()\n    },\n    time_since_change_vs_time_since_close() {\n      if (this.time_since_change_value_minutes < this.time_since_close_value) {\n        console.log('Letzte StatusÃ¤nderung war nach dem letzten Ladenschluss')\n      } else if (this.time_since_close_value < this.time_since_change_value_minutes) {\n        console.log('Letzter Ladenschluss war nach der letzten StatusÃ¤nderung')\n      } else {\n        console.log('Fehler')\n      }\n    },\n  }\n})\n</script>\n\n<style scoped>\n.card {\n    margin-top: 15px;\n}\n.time_chip {\n    /* position: relative; */\n    text-align: right;\n}\n.title {\n    margin-top: 10px;\n}\n.button {\n    margin-top: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}