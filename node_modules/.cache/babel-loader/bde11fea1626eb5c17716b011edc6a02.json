{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Modal Content \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_content = _resolveComponent(\"ion-content\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Sheet Modal \"), _createVNode(_component_ion_content, null, {\n    default: _withCtx(() => [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.markers, item => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: item.name\n      }, _toDisplayString(item.name), 1\n      /* TEXT */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  })], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;iDAEiB;;;;;6DADbA,sCACAC,aAKcC,sBALd,EAKc,IALd,EAKc;sBALD,MAET,oDAEKC,SAFL,EAEK,IAFL,EAEKC,YAFcC,YAEd,EAFMC,IAAe,IAAX;2BAAfC,oBAEK,IAFL,EAEK;AAFwBC,WAAG,EAAEF,IAAI,CAACG;AAElC,OAFL,mBACOH,IAAI,CAACG,KADZ,EACgB;AAAA;AADhB;KAEK,CAFL;;AAAA,QAGU;;;;AAAA,GALd","names":["_createCommentVNode","_createVNode","_component_ion_content","_Fragment","_renderList","_ctx","item","_createElementBlock","key","name"],"sourceRoot":"","sources":["/home/pumuckl/Dokumente/code/ionic/dumpster-diving-ionic/src/views/SpotModal.vue"],"sourcesContent":["<template>\n    <!-- Sheet Modal -->\n    <ion-content>Modal Content\n\n        <li v-for=\"item in markers\" :key=\"item.name\">\n            {{ item.name }}\n        </li>\n    </ion-content>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { useCounterStore } from '@/stores/counter'\nimport { supabase } from \"@/supabase\"\n\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {\n    },\n  data: () => ({\n    spot: '',\n    markers: [],\n  }),\n  setup() {\n  },\n  async created() {\n    const counter = useCounterStore()\n    console.log(counter.count)\n    const {data: events} = await supabase\n      .from('events')\n      .select('coordinates,name')\n      .eq('id', counter.count)\n    console.log(events)\n    // this.loaded = true\n    // console.log(this.spot)\n    this.populate_markers_array(events)\n  },\n  methods: {\n    populate_markers_array: function (marker_objects) {\n      this.markers = marker_objects.map(m => {\n        return {\n          name: m.name,\n          coord: m.coordinates.split(', ').map(c => parseFloat(c))\n        }\n      })\n      console.log(this.markers)\n    },\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}