{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { useCounterStore } from '@/stores/counter';\nimport { supabase } from \"@/supabase\";\nimport { IonContent, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonButton, actionSheetController } from '@ionic/vue';\nimport { caretForwardCircle, close, heart, share } from 'ionicons/icons';\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {\n    IonContent,\n    IonCard,\n    IonCardContent,\n    IonCardHeader,\n    IonCardTitle,\n    IonButton\n  },\n  data: () => ({\n    spot: '',\n    markers: []\n  }),\n\n  setup() {},\n\n  async created() {\n    const counter = useCounterStore();\n    console.log(counter.count);\n    const {\n      data: events\n    } = await supabase.from('events').select('description,name').eq('id', counter.count);\n    console.log(events);\n    this.spot = events;\n  },\n\n  methods: {\n    async presentActionSheet() {\n      const actionSheet = await actionSheetController.create({\n        header: 'Status',\n        cssClass: 'my-custom-class',\n        buttons: [{\n          text: 'HEUTE NOCH NICHT BESUCHT',\n          icon: share,\n          data: 10,\n          handler: () => {\n            console.log('Share clicked');\n          }\n        }, {\n          text: 'HIER IST FÜR HEUTE SCHON ALLES GERETTET',\n          icon: caretForwardCircle,\n          data: 'Data value',\n          handler: () => {\n            console.log('Play clicked');\n          }\n        }, {\n          text: 'HIER GIBTS NOCH WAS',\n          icon: heart,\n          handler: () => {\n            console.log('Favorite clicked');\n          }\n        }, {\n          text: 'Abbrechen',\n          icon: close,\n          role: 'cancel',\n          handler: () => {\n            console.log('Abbrechen clicked');\n          }\n        }]\n      });\n      await actionSheet.present();\n      const {\n        role,\n        data\n      } = await actionSheet.onDidDismiss();\n      console.log('onDidDismiss resolved with role and data', role, data);\n    }\n\n  }\n});","map":{"version":3,"mappings":"AAsBA,SAASA,eAAT,QAAgC,KAAhC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,cAA9B,EAA8CC,aAA9C,EAA6DC,YAA7D,EAA2EC,SAA3E,EAAsFC,qBAAtF,QAAmH,YAAnH;AACA,SAASC,kBAAT,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,KAA3C,QAAwD,gBAAxD;AAEA,eAAeb,eAAe,CAAC;AAC7Bc,MAAI,EAAE,UADuB;AAE7BC,YAAU,EAAE;AACVZ,cADU;AAEVC,WAFU;AAGVC,kBAHU;AAIVC,iBAJU;AAKVC,gBALU;AAMVC;AANU,GAFiB;AAU7BQ,MAAI,EAAE,OAAO;AACXC,QAAI,EAAE,EADK;AAEXC,WAAO,EAAE;AAFE,GAAP,CAVuB;;AAc7BC,OAAK,GAAG,CACP,CAf4B;;AAgB7B,QAAMC,OAAN,GAAgB;AACd,UAAMC,OAAM,GAAIpB,eAAe,EAA/B;AACAqB,WAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,KAApB;AACA,UAAM;AAACR,UAAI,EAAES;AAAP,QAAiB,MAAMvB,QAAO,CACjCwB,IAD0B,CACrB,QADqB,EAE1BC,MAF0B,CAEnB,kBAFmB,EAG1BC,EAH0B,CAGvB,IAHuB,EAGjBP,OAAO,CAACG,KAHS,CAA7B;AAIAF,WAAO,CAACC,GAAR,CAAYE,MAAZ;AACA,SAAKR,IAAL,GAAYQ,MAAZ;AACD,GAzB4B;;AA0B7BI,SAAO,EAAE;AACP,UAAMC,kBAAN,GAA2B;AACzB,YAAMC,WAAU,GAAI,MAAMtB,qBAAoB,CAC3CuB,MADuB,CAChB;AACNC,cAAM,EAAE,QADF;AAENC,gBAAQ,EAAE,iBAFJ;AAGNC,eAAO,EAAE,CACP;AACEC,cAAI,EAAE,0BADR;AAEEC,cAAI,EAAExB,KAFR;AAGEG,cAAI,EAAE,EAHR;AAIEsB,iBAAO,EAAE,MAAM;AACbhB,mBAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AANH,SADO,EASP;AACEa,cAAI,EAAE,yCADR;AAEEC,cAAI,EAAE3B,kBAFR;AAGEM,cAAI,EAAE,YAHR;AAIEsB,iBAAO,EAAE,MAAM;AACbhB,mBAAO,CAACC,GAAR,CAAY,cAAZ;AACD;AANH,SATO,EAiBP;AACEa,cAAI,EAAE,qBADR;AAEEC,cAAI,EAAEzB,KAFR;AAGE0B,iBAAO,EAAE,MAAM;AACbhB,mBAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AALH,SAjBO,EAwBP;AACEa,cAAI,EAAE,WADR;AAEEC,cAAI,EAAE1B,KAFR;AAGE4B,cAAI,EAAE,QAHR;AAIED,iBAAO,EAAE,MAAM;AACbhB,mBAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AANH,SAxBO;AAHH,OADgB,CAA1B;AAsCA,YAAMQ,WAAW,CAACS,OAAZ,EAAN;AAEA,YAAM;AAAED,YAAF;AAAQvB;AAAR,UAAiB,MAAMe,WAAW,CAACU,YAAZ,EAA7B;AACAnB,aAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDgB,IAAxD,EAA8DvB,IAA9D;AACD;;AA5CM;AA1BoB,CAAD,CAA9B","names":["defineComponent","useCounterStore","supabase","IonContent","IonCard","IonCardContent","IonCardHeader","IonCardTitle","IonButton","actionSheetController","caretForwardCircle","close","heart","share","name","components","data","spot","markers","setup","created","counter","console","log","count","events","from","select","eq","methods","presentActionSheet","actionSheet","create","header","cssClass","buttons","text","icon","handler","role","present","onDidDismiss"],"sourceRoot":"","sources":["/home/pumuckl/Dokumente/code/ionic/dumpster-diving-ionic/src/views/SpotModal.vue"],"sourcesContent":["<template>\n    <!-- Sheet Modal -->\n        <ion-content>\n            <ion-card class=\"card\">\n                <ion-card-header>\n                <ion-card-title v-for=\"item in spot\" :key=\"item.name\">\n                {{ item.name }}\n                </ion-card-title>\n                </ion-card-header>\n                <ion-card-content v-for=\"item in spot\" :key=\"item.name\">\n                    {{ item.description }}\n                    <ion-button \n                        expand=\"block\" \n                        @click=\"presentActionSheet\">\n                        Block Button\n                    </ion-button>\n                </ion-card-content>\n            </ion-card>\n        </ion-content>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { useCounterStore } from '@/stores/counter'\nimport { supabase } from \"@/supabase\"\nimport { IonContent, IonCard, IonCardContent, IonCardHeader, IonCardTitle, IonButton, actionSheetController } from '@ionic/vue';\nimport { caretForwardCircle, close, heart, share } from 'ionicons/icons';\n\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {\n    IonContent,\n    IonCard, \n    IonCardContent, \n    IonCardHeader, \n    IonCardTitle,\n    IonButton\n    },\n  data: () => ({\n    spot: '',\n    markers: [],\n  }),\n  setup() {\n  },\n  async created() {\n    const counter = useCounterStore()\n    console.log(counter.count)\n    const {data: events} = await supabase\n      .from('events')\n      .select('description,name')\n      .eq('id', counter.count)\n    console.log(events)\n    this.spot = events\n  },\n  methods: {\n    async presentActionSheet() {\n      const actionSheet = await actionSheetController\n        .create({\n          header: 'Status',\n          cssClass: 'my-custom-class',\n          buttons: [\n            {\n              text: 'HEUTE NOCH NICHT BESUCHT',\n              icon: share,\n              data: 10,  \n              handler: () => {\n                console.log('Share clicked')\n              },\n            },\n            {\n              text: 'HIER IST FÜR HEUTE SCHON ALLES GERETTET',\n              icon: caretForwardCircle,\n              data: 'Data value',\n              handler: () => {\n                console.log('Play clicked')\n              },\n            },\n            {\n              text: 'HIER GIBTS NOCH WAS',\n              icon: heart,\n              handler: () => {\n                console.log('Favorite clicked')\n              },\n            },\n            {\n              text: 'Abbrechen',\n              icon: close,\n              role: 'cancel',\n              handler: () => {\n                console.log('Abbrechen clicked')\n              },\n            },\n          ],\n        });\n      await actionSheet.present();\n\n      const { role, data } = await actionSheet.onDidDismiss();\n      console.log('onDidDismiss resolved with role and data', role, data);\n    },\n  }\n});\n</script>\n\n<style scoped>\n.card {\n    margin-top: 15px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}