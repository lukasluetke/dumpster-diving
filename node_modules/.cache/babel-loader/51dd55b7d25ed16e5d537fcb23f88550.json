{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent } from '@ionic/vue';\nimport \"leaflet/dist/leaflet.css\";\nimport { LMap, LTileLayer, LMarker } from \"@vue-leaflet/vue-leaflet\";\nimport { supabase } from \"../supabase\";\nimport { IonModal, IonButton } from '@ionic/vue';\nimport { modalController } from '@ionic/vue';\nimport Modal from './modal.vue';\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    LMap,\n    LTileLayer,\n    LMarker,\n    IonModal,\n    IonButton\n  },\n\n  setup() {},\n\n  async created() {\n    const {\n      data: events\n    } = await supabase.from('events').select('coordinates');\n    this.populate_markers_array(events);\n    this.loaded = true;\n  },\n\n  data: () => ({\n    spot: false,\n    zoomControl: false,\n    loaded: true,\n    markers_works: [[48.864716, 2.349014], [51.509865, -0.118092]],\n    markers: [],\n    markerLatLng: [47.313220, -1.319482]\n  }),\n  methods: {\n    populate_markers_array: function (marker_objects) {\n      let markersArr = [];\n      marker_objects.forEach(element => {\n        let coordsArr = element.coordinates.split(',');\n        markersArr.push([parseFloat(coordsArr[0]), parseFloat(coordsArr[1])]);\n      });\n      this.markers = markersArr;\n      console.log(this.markers_works);\n    },\n    greet: function () {\n      this.spot = true;\n      console.log(this.spot);\n    },\n\n    async openModal() {\n      const modal = await modalController.create({\n        component: Modal,\n        initialBreakpoint: 0.5,\n        breakpoints: [0, 0.5, 1]\n      });\n      return modal.present();\n    }\n\n  }\n});","map":{"version":3,"mappings":"AAkDA,SAASA,eAAT,QAAgC,KAAhC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,UAA7B,EAAyCC,QAAzC,EAAmDC,UAAnD,QAAqE,YAArE;AACA,OAAO,0BAAP;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,OAA3B,QAA0C,0BAA1C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,eAAeb,eAAe,CAAC;AAC7Bc,MAAI,EAAE,UADuB;AAE7BC,YAAU,EAAE;AACVb,aADU;AAEVC,cAFU;AAGVC,YAHU;AAIVC,cAJU;AAKVJ,WALU;AAMVK,QANU;AAOVC,cAPU;AAQVC,WARU;AASVE,YATU;AAUVC;AAVU,GAFiB;;AAc7BK,OAAI,GAAK,CACR,CAf4B;;AAgB7B,QAAMC,OAAN,GAAgB;AACd,UAAM;AAACC,UAAI,EAAEC;AAAP,QAAiB,MAAMV,QAAO,CACjCW,IAD0B,CACrB,QADqB,EAE1BC,MAF0B,CAEnB,aAFmB,CAA7B;AAGA,SAAKC,sBAAL,CAA4BH,MAA5B;AACA,SAAKI,MAAL,GAAc,IAAd;AACD,GAtB4B;;AAuB7BL,MAAI,EAAE,OAAO;AACXM,QAAI,EAAE,KADK;AAEXC,eAAW,EAAE,KAFF;AAGXF,UAAM,EAAE,IAHG;AAIXG,iBAAa,EAAE,CACX,CAAC,SAAD,EAAY,QAAZ,CADW,EAEX,CAAC,SAAD,EAAY,CAAC,QAAb,CAFW,CAJJ;AAQXC,WAAO,EAAE,EARE;AASXC,gBAAY,EAAE,CAAC,SAAD,EAAY,CAAC,QAAb;AATH,GAAP,CAvBuB;AAkC7BC,SAAO,EAAE;AACPP,0BAAsB,EAAE,UAAUQ,cAAV,EAA0B;AAChD,UAAIC,UAAS,GAAI,EAAjB;AACAD,oBAAc,CAACE,OAAf,CAAuBC,OAAM,IAAK;AAChC,YAAIC,SAAQ,GAAID,OAAO,CAACE,WAAR,CAAoBC,KAApB,CAA0B,GAA1B,CAAhB;AACAL,kBAAU,CAACM,IAAX,CAAgB,CAACC,UAAU,CAACJ,SAAS,CAAC,CAAD,CAAV,CAAX,EAA2BI,UAAU,CAACJ,SAAS,CAAC,CAAD,CAAV,CAArC,CAAhB;AACD,OAHD;AAIA,WAAKP,OAAL,GAAeI,UAAf;AACAQ,aAAO,CAACC,GAAR,CAAY,KAAKd,aAAjB;AACD,KATM;AAUPe,SAAK,EAAE,YAAY;AACjB,WAAKjB,IAAL,GAAY,IAAZ;AACAe,aAAO,CAACC,GAAR,CAAY,KAAKhB,IAAjB;AACD,KAbM;;AAcP,UAAMkB,SAAN,GAAkB;AAChB,YAAMC,KAAI,GAAI,MAAM/B,eAAc,CAC/BgC,MADiB,CACV;AACNC,iBAAS,EAAEhC,KADL;AAENiC,yBAAiB,EAAE,GAFb;AAGNC,mBAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT;AAHP,OADU,CAApB;AAMA,aAAOJ,KAAK,CAACK,OAAN,EAAP;AACD;;AAtBM;AAlCoB,CAAD,CAA9B","names":["defineComponent","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","LMap","LTileLayer","LMarker","supabase","IonModal","IonButton","modalController","Modal","name","components","setup","created","data","events","from","select","populate_markers_array","loaded","spot","zoomControl","markers_works","markers","markerLatLng","methods","marker_objects","markersArr","forEach","element","coordsArr","coordinates","split","push","parseFloat","console","log","greet","openModal","modal","create","component","initialBreakpoint","breakpoints","present"],"sourceRoot":"","sources":["/home/pumuckl/Dokumente/code/ionic/dumpster-diving-ionic/src/views/Tab2Page.vue"],"sourcesContent":["<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Map</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Tab 2</ion-title>\n        </ion-toolbar>\n      </ion-header>\n      \n      <ion-modal \n        z.index=1\n        trigger=\"trigger-button\"\n        :is-open=\"true\"\n        :breakpoints=\"[0.1, 0.5, 1]\"\n        :initialBreakpoint=\"0.5\"\n      >\n        <ion-content>Modal Content</ion-content>\n      </ion-modal>\n      <!-- ---------- -->\n      <l-map \n        z-index=0\n        :zoom=\"13\" \n        :center=\"[50.9223,11.5723]\" \n        :options=\"{zoomControl: false}\">\n        <l-tile-layer style=\"z-index: 100\" url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"></l-tile-layer>\n        <!-- http://{s}.tile.osm.org/{z}/{x}/{y}.png -->\n        <!-- https://leaflet-extras.github.io/leaflet-providers/preview/ -->\n          <l-marker :lat-lng=\"markerLatLng\" ></l-marker>\n          <ion-button id=\"trigger-button\">Click to open modal</ion-button>\n            <l-marker @click=\"openModal()\"\n              id=\"trigger-button\"\n              v-for=\"(marker, index) in markers\"\n              :key=\"index\"\n              ref=\"markersRef\"\n              :lat-lng=\"marker\">\n            </l-marker>\n\n      </l-map>\n\n      <!-- ----------- -->\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent } from '@ionic/vue';\nimport \"leaflet/dist/leaflet.css\"\nimport { LMap, LTileLayer, LMarker } from \"@vue-leaflet/vue-leaflet\";\nimport { supabase } from \"../supabase\"\nimport { IonModal, IonButton } from '@ionic/vue';\nimport { modalController } from '@ionic/vue';\nimport Modal from './modal.vue'\n\n\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: { \n    IonHeader, \n    IonToolbar, \n    IonTitle, \n    IonContent, \n    IonPage, \n    LMap,\n    LTileLayer,\n    LMarker,\n    IonModal, \n    IonButton,\n    },\n  setup () {\n  },\n  async created() {\n    const {data: events} = await supabase\n      .from('events')\n      .select('coordinates')\n    this.populate_markers_array(events)\n    this.loaded = true\n  },\n  data: () => ({\n    spot: false,\n    zoomControl: false,\n    loaded: true,\n    markers_works: [\n        [48.864716, 2.349014],\n        [51.509865, -0.118092]\n    ],    \n    markers: [],\n    markerLatLng: [47.313220, -1.319482]\n  }),\n  methods: {\n    populate_markers_array: function (marker_objects) {\n      let markersArr = []\n      marker_objects.forEach(element => {\n        let coordsArr = element.coordinates.split(',')\n        markersArr.push([parseFloat(coordsArr[0]), parseFloat(coordsArr[1])])\n      });\n      this.markers = markersArr\n      console.log(this.markers_works)\n    },\n    greet: function () {\n      this.spot = true;\n      console.log(this.spot)\n    },\n    async openModal() {\n      const modal = await modalController\n        .create({\n          component: Modal,\n          initialBreakpoint: 0.5,\n          breakpoints: [0, 0.5, 1]\n        })\n      return modal.present();\n    },\n\n  }\n});\n</script>\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}