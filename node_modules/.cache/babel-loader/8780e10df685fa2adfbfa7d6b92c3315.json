{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent } from '@ionic/vue';\nimport ExploreContainer from '@/components/ExploreContainer.vue';\nimport \"leaflet/dist/leaflet.css\";\nimport { LMap, LGeoJson } from \"@vue-leaflet/vue-leaflet\";\nexport default defineComponent({\n  name: 'Tab1Page',\n  components: {\n    ExploreContainer,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    LMap,\n    LGeoJson\n  },\n\n  data() {\n    return {\n      geojson: {\n        type: \"FeatureCollection\",\n        features: [// ...\n        ]\n      },\n      geojsonOptions: {// Options that don't rely on Leaflet methods.\n      }\n    };\n  },\n\n  async beforeMount() {\n    // HERE is where to load Leaflet components!\n    const {\n      circleMarker\n    } = await import(\"leaflet/dist/leaflet-src.esm\"); // And now the Leaflet circleMarker function can be used by the options:\n\n    this.geojsonOptions.pointToLayer = (feature, latLng) => circleMarker(latLng, {\n      radius: 8\n    });\n\n    this.mapIsReady = true;\n  }\n\n});","map":{"version":3,"mappings":"AAmCA,SAASA,eAAT,QAAgC,KAAhC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,UAA7B,EAAyCC,QAAzC,EAAmDC,UAAnD,QAAqE,YAArE;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAO,0BAAP;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,0BAA/B;AAEA,eAAgBR,eAAe,CAAC;AAC9BS,MAAI,EAAE,UADwB;AAE9BC,YAAU,EAAE;AACVJ,oBADU;AAEVJ,aAFU;AAGVC,cAHU;AAIVC,YAJU;AAKVC,cALU;AAMVJ,WANU;AAOVM,QAPU;AAQVC;AARU,GAFkB;;AAW9BG,MAAI,GAAG;AACL,WAAO;AACLC,aAAO,EAAE;AACPC,YAAI,EAAE,mBADC;AAEPC,gBAAQ,EAAE,CACR;AADQ;AAFH,OADJ;AAOLC,oBAAc,EAAE,CACd;AADc;AAPX,KAAP;AAWD,GAvB6B;;AAwB9B,QAAMC,WAAN,GAAoB;AAClB;AACA,UAAM;AAAEC;AAAF,QAAmB,MAAM,OAAO,8BAAP,CAA/B,CAFkB,CAIlB;;AACA,SAAKF,cAAL,CAAoBG,YAApB,GAAmC,CAACC,OAAD,EAAUC,MAAV,KACjCH,YAAY,CAACG,MAAD,EAAS;AAAEC,YAAM,EAAE;AAAV,KAAT,CADd;;AAEA,SAAKC,UAAL,GAAkB,IAAlB;AACD;;AAhC6B,CAAD,CAA/B","names":["defineComponent","IonPage","IonHeader","IonToolbar","IonTitle","IonContent","ExploreContainer","LMap","LGeoJson","name","components","data","geojson","type","features","geojsonOptions","beforeMount","circleMarker","pointToLayer","feature","latLng","radius","mapIsReady"],"sourceRoot":"","sources":["/home/pumuckl/Dokumente/code/ionic/dumpster-diving-ionic/src/views/Tab1Page.vue"],"sourcesContent":["<template>\n  <ion-page>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Tab 1</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content :fullscreen=\"true\">\n      <ion-header collapse=\"condense\">\n        <ion-toolbar>\n          <ion-title size=\"large\">Tab 1</ion-title>\n        </ion-toolbar>\n      </ion-header>\n    \n      <ExploreContainer name=\"Tab 1 page test\" />\n\n<!-- ------------ -->\n      <div class=\"main\">\n        <div id=\"map-wrap\" style=\"height: 100vh\">\n\n            <l-map :zoom=\"13\" :center=\"[50.9223,11.5723]\" :options=\"{zoomControl: false}\">\n              <l-tile-layer style=\"z-index: 100\" url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"></l-tile-layer>\n\n            </l-map>\n\n        </div>\n\n\n      </div>\n<!-- ----------------- -->\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent } from '@ionic/vue';\nimport ExploreContainer from '@/components/ExploreContainer.vue';\nimport \"leaflet/dist/leaflet.css\"\nimport { LMap, LGeoJson } from \"@vue-leaflet/vue-leaflet\";\n\nexport default  defineComponent({\n  name: 'Tab1Page',\n  components: { \n    ExploreContainer,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonPage,\n    LMap,\n    LGeoJson, },\n  data() {\n    return {\n      geojson: {\n        type: \"FeatureCollection\",\n        features: [\n          // ...\n        ],\n      },\n      geojsonOptions: {\n        // Options that don't rely on Leaflet methods.\n      },\n    };\n  },\n  async beforeMount() {\n    // HERE is where to load Leaflet components!\n    const { circleMarker } = await import(\"leaflet/dist/leaflet-src.esm\");\n\n    // And now the Leaflet circleMarker function can be used by the options:\n    this.geojsonOptions.pointToLayer = (feature, latLng) =>\n      circleMarker(latLng, { radius: 8 });\n    this.mapIsReady = true;\n  },\n\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}