{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0832cc81\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" Heute noch nicht besucht \");\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" FÃ¼r heute schon alles gerettet \");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Hier gibts noch was \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_card_title = _resolveComponent(\"ion-card-title\");\n\n  const _component_ion_col = _resolveComponent(\"ion-col\");\n\n  const _component_ion_icon = _resolveComponent(\"ion-icon\");\n\n  const _component_ion_label = _resolveComponent(\"ion-label\");\n\n  const _component_ion_chip = _resolveComponent(\"ion-chip\");\n\n  const _component_ion_row = _resolveComponent(\"ion-row\");\n\n  const _component_ion_grid = _resolveComponent(\"ion-grid\");\n\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\");\n\n  const _component_ion_button = _resolveComponent(\"ion-button\");\n\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\");\n\n  const _component_ion_card = _resolveComponent(\"ion-card\");\n\n  const _component_ion_content = _resolveComponent(\"ion-content\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Sheet Modal \"), _createVNode(_component_ion_content, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.spot, item => {\n      return _openBlock(), _createBlock(_component_ion_card, {\n        class: \"card\",\n        key: item.name\n      }, {\n        default: _withCtx(() => [_createVNode(_component_ion_card_header, null, {\n          default: _withCtx(() => [_createVNode(_component_ion_grid, null, {\n            default: _withCtx(() => [_createVNode(_component_ion_row, null, {\n              default: _withCtx(() => [_createVNode(_component_ion_col, null, {\n                default: _withCtx(() => [_createVNode(_component_ion_card_title, null, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              ), _createVNode(_component_ion_col, null, {\n                default: _withCtx(() => [_createVNode(_component_ion_chip, null, {\n                  default: _withCtx(() => [_createVNode(_component_ion_icon, {\n                    icon: _ctx.time,\n                    color: \"dark\"\n                  }, null, 8\n                  /* PROPS */\n                  , [\"icon\"]), _createVNode(_component_ion_label, null, {\n                    default: _withCtx(() => [_createTextVNode(\"Ab \" + _toDisplayString(item.time) + \" Uhr\", 1\n                    /* TEXT */\n                    )]),\n                    _: 2\n                    /* DYNAMIC */\n\n                  }, 1024\n                  /* DYNAMIC_SLOTS */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1024\n                /* DYNAMIC_SLOTS */\n                )]),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1024\n          /* DYNAMIC_SLOTS */\n          )]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        ), _createVNode(_component_ion_card_content, null, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(item.description) + \" \", 1\n          /* TEXT */\n          ), item.status == '1' ? (_openBlock(), _createBlock(_component_ion_button, {\n            key: 0,\n            expand: \"block\",\n            color: \"danger\",\n            onClick: _ctx.presentActionSheet\n          }, {\n            default: _withCtx(() => [_hoisted_1]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.status == '2' ? (_openBlock(), _createBlock(_component_ion_button, {\n            key: 1,\n            expand: \"block\",\n            color: \"success\",\n            onClick: _ctx.presentActionSheet\n          }, {\n            default: _withCtx(() => [_hoisted_2]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), item.status == '3' ? (_openBlock(), _createBlock(_component_ion_button, {\n            key: 2,\n            expand: \"block\",\n            color: \"warning\",\n            onClick: _ctx.presentActionSheet\n          }, {\n            default: _withCtx(() => [_hoisted_3]),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        )]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1024\n      /* DYNAMIC_SLOTS */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  })], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;iDA6BoD;;iDAMA;;iDAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;6DAxChDA,sCACIC,aA4CcC,sBA5Cd,EA4Cc,IA5Cd,EA4Cc;sBAzCN,MAAoB,oBAFxBC,oBA0CWC,SA1CX,EA0CW,IA1CX,EA0CWC,YAxCQC,SAwCR,EAxCAC,IAAY,IAAR;2BAFfC,aA0CWC,mBA1CX,EA0CW;AAzCPC,aAAK,EAAC,MAyCC;AAvCNC,WAAG,EAAEJ,IAAI,CAACK;AAuCJ,OA1CX;0BAII,MAgBkB,CAhBlBX,aAgBkBY,0BAhBlB,EAgBkB,IAhBlB,EAgBkB;4BAfd,MAcW,CAdXZ,aAcWa,mBAdX,EAcW,IAdX,EAcW;8BAbP,MAYU,CAZVb,aAYUc,kBAZV,EAYU,IAZV,EAYU;gCAXV,MAIU,CAJVd,aAIUe,kBAJV,EAIU,IAJV,EAIU;kCAHN,MAEiB,CAFjBf,aAEiBgB,yBAFjB,EAEiB,IAFjB,EAEiB;oCADjB,MAAe,mCAAZV,IAAI,CAACK,OAAI;AAAA;mBAAG,EACE;;;;AAAA,iBAFjB;;AAAA,iBAEiB,EACX;;;;AAAA,eAJV;;AAAA,eAIU,EACVX,aAKUe,kBALV,EAKU,IALV,EAKU;kCAJN,MAGW,CAHXf,aAGWiB,mBAHX,EAGW,IAHX,EAGW;oCAFP,MAA+C,CAA/CjB,aAA+CkB,mBAA/C,EAA+C;AAApCC,wBAAI,EAAEd,SAA8B;AAAxBe,yBAAK,EAAC;AAAkB,mBAA/C;;AAAA,6BAA+C,EAC/CpB,aAA6CqB,oBAA7C,EAA6C,IAA7C,EAA6C;sCAAlC,MAAG,kBAAH,QAAGC,iBAAGhB,IAAI,CAACiB,IAAR,CAAH,GAAkB,QAAI;AAAA;qBAAnB,EAA+B;;;;AAAA,mBAA7C;;AAAA,mBAD+C,EAExC;;;;AAAA,iBAHX;;AAAA,iBAGW,EACL;;;;AAAA,eALV;;AAAA,eADU,EAOA;;;;AAAA,aAZV;;AAAA,aAYU,EACH;;;;AAAA,WAdX;;AAAA,WAcW,EACG;;;;AAAA,SAhBlB;;AAAA,SAgBkB,EAClBvB,aAoBmBwB,2BApBnB,EAoBmB,IApBnB,EAoBmB;4BAnBf,MAAsB,mCAAnBlB,IAAI,CAACmB,eAAc,KACtB;AAAA;WADsB,EACJnB,IAAI,CAACoB,MAAL,IAAW,qBAA7BnB,aAKaoB,qBALb,EAKa;kBAAA;AAJTC,kBAAM,EAAC,OAIE;AAHTR,iBAAK,EAAC,QAGG;AAFRS,mBAAK,EAAExB;AAEC,WALb;8BAGgC,MAEhC;;;;WALA;;AAAA,6DADsB,EAOJC,IAAI,CAACoB,MAAL,IAAW,qBAA7BnB,aAKaoB,qBALb,EAKa;kBAAA;AAJTC,kBAAM,EAAC,OAIE;AAHTR,iBAAK,EAAC,SAGG;AAFRS,mBAAK,EAAExB;AAEC,WALb;8BAGgC,MAEhC;;;;WALA;;AAAA,6DAPsB,EAaJC,IAAI,CAACoB,MAAL,IAAW,qBAA7BnB,aAKaoB,qBALb,EAKa;kBAAA;AAJTC,kBAAM,EAAC,OAIE;AAHTR,iBAAK,EAAC,SAGG;AAFRS,mBAAK,EAAExB;AAEC,WALb;8BAGgC,MAEhC;;;;WALA;;AAAA,6DAbsB,EAmBP;;;;AAAA,SApBnB;;AAAA,SADkB;;;;OApBtB;;AAAA;KA0CW,CA1CX;;AAAA,KAEwB,GAyCd;;;;AAAA,GA5Cd","names":["_createCommentVNode","_createVNode","_component_ion_content","_createElementBlock","_Fragment","_renderList","_ctx","item","_createBlock","_component_ion_card","class","key","name","_component_ion_card_header","_component_ion_grid","_component_ion_row","_component_ion_col","_component_ion_card_title","_component_ion_chip","_component_ion_icon","icon","color","_component_ion_label","_toDisplayString","time","_component_ion_card_content","description","status","_component_ion_button","expand","onClick"],"sourceRoot":"","sources":["/home/pumuckl/Dokumente/code/ionic/dumpster-diving-ionic/src/views/SpotModal.vue"],"sourcesContent":["<template>\n    <!-- Sheet Modal -->\n        <ion-content>\n            <ion-card \n                class=\"card\" \n                v-for=\"item in spot\" \n                :key=\"item.name\">\n                <ion-card-header>\n                    <ion-grid>\n                        <ion-row>\n                        <ion-col>\n                            <ion-card-title>\n                            {{ item.name }}\n                            </ion-card-title>\n                        </ion-col>\n                        <ion-col>\n                            <ion-chip>\n                                <ion-icon :icon=\"time\" color=\"dark\"></ion-icon>\n                                <ion-label>Ab {{ item.time }} Uhr</ion-label>\n                            </ion-chip>\n                        </ion-col>\n                        </ion-row>\n                    </ion-grid>\n                </ion-card-header>\n                <ion-card-content>\n                    {{ item.description }}\n                    <ion-button v-if=\"item.status == '1'\"\n                        expand=\"block\" \n                        color=\"danger\"\n                        @click=\"presentActionSheet\">\n                        Heute noch nicht besucht\n                    </ion-button>\n                    <ion-button v-if=\"item.status == '2'\"\n                        expand=\"block\" \n                        color=\"success\"\n                        @click=\"presentActionSheet\">\n                        FÃ¼r heute schon alles gerettet\n                    </ion-button>\n                    <ion-button v-if=\"item.status == '3'\"\n                        expand=\"block\" \n                        color=\"warning\"\n                        @click=\"presentActionSheet\">\n                        Hier gibts noch was\n                    </ion-button>\n                </ion-card-content>\n            </ion-card>\n        </ion-content>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { useCounterStore } from '@/stores/counter'\nimport { supabase } from \"@/supabase\"\nimport { time } from 'ionicons/icons';\nimport { IonContent, \n    IonCard, \n    IonCardContent, \n    IonCardHeader, \n    IonCardTitle, \n    IonButton, \n    actionSheetController,\n    IonIcon,\n    IonLabel,\n    IonChip,\n    IonCol, \n    IonGrid, \n    IonRow } from '@ionic/vue';\n\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {\n    IonContent,\n    IonCard, \n    IonCardContent, \n    IonCardHeader, \n    IonCardTitle,\n    IonButton,\n    IonIcon,\n    IonLabel,\n    IonChip,\n    IonCol, \n    IonGrid, \n    IonRow\n    },\n  data: () => ({\n    spot: '',\n    markers: [],\n  }),\n  setup() {\n    return { time }\n  },\n  async created() {\n    const counter = useCounterStore()\n    console.log(counter.count)\n    const {data: events} = await supabase\n      .from('events')\n      .select('description,name,status,time')\n      .eq('id', counter.count)\n    console.log(events)\n    this.spot = events\n  },\n  methods: {\n    async presentActionSheet() {\n      const actionSheet = await actionSheetController\n        .create({\n          header: 'Status',\n          cssClass: 'my-custom-class',\n          buttons: [\n            {\n              text: 'Heute noch nicht besucht',\n              data: 10,  \n              handler: () => {\n                console.log('Share clicked')\n                this.changeStatus(1)\n              },\n            },\n            {\n              text: 'FÃ¼r heute schon alles gerettet',\n              data: 'Data value',\n              handler: () => {\n                console.log('Play clicked')\n                this.changeStatus(2)\n              },\n            },\n            {\n              text: 'Hier gibts noch was',\n              handler: () => {\n                console.log('Favorite clicked')\n                this.changeStatus(3)\n              },\n            },\n            {\n              text: 'Abbrechen',\n              role: 'cancel',\n              handler: () => {\n                console.log('Abbrechen clicked')\n              },\n            },\n          ],\n        });\n      await actionSheet.present();\n\n      const { role, data } = await actionSheet.onDidDismiss();\n      console.log('onDidDismiss resolved with role and data', role, data);\n    },\n    async changeStatus(future_status) {\n        console.log(future_status)\n        const counter = useCounterStore()\n        const { data: error } = await supabase\n            .from('events')\n            .update({ status: future_status })\n            .eq('id', counter.count )\n        console.log(error)\n        const {data: events} = await supabase\n            .from('events')\n            .select('description,name,status')\n            .eq('id', counter.count)\n        console.log(events)\n        this.spot = events\n    },\n  }\n});\n</script>\n\n<style scoped>\n.card {\n    margin-top: 15px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}