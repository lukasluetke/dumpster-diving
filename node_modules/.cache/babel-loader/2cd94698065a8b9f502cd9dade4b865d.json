{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { useCounterStore } from '@/stores/counter';\nimport { supabase } from \"@/supabase\";\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {},\n  data: () => ({\n    spot: []\n  }),\n\n  setup() {\n    const counter = useCounterStore(); // this.spot = counter.count\n\n    console.log(counter.count);\n  },\n\n  async created() {\n    const {\n      data: events\n    } = await supabase.from('events').select('coordinates,name').eq('id', '1');\n    console.log(events);\n    this.populate_markers_array(events); // this.loaded = true\n  },\n\n  methods: {}\n});","map":{"version":3,"mappings":"AAQA,SAASA,eAAT,QAAgC,KAAhC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,eAAeF,eAAe,CAAC;AAC7BG,MAAI,EAAE,UADuB;AAE7BC,YAAU,EAAE,EAFiB;AAI7BC,MAAI,EAAE,OAAO;AACXC,QAAI,EAAE;AADK,GAAP,CAJuB;;AAO7BC,OAAK,GAAG;AACN,UAAMC,OAAM,GAAIP,eAAe,EAA/B,CADM,CAEN;;AACAQ,WAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,KAApB;AACD,GAX4B;;AAY7B,QAAMC,OAAN,GAAgB;AACd,UAAM;AAACP,UAAI,EAAEQ;AAAP,QAAiB,MAAMX,QAAO,CACjCY,IAD0B,CACrB,QADqB,EAE1BC,MAF0B,CAEnB,kBAFmB,EAG1BC,EAH0B,CAGvB,IAHuB,EAGjB,GAHiB,CAA7B;AAIEP,WAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,SAAKI,sBAAL,CAA4BJ,MAA5B,EANY,CAOd;AACD,GApB4B;;AAqB7BK,SAAO,EAAE;AArBoB,CAAD,CAA9B","names":["defineComponent","useCounterStore","supabase","name","components","data","spot","setup","counter","console","log","count","created","events","from","select","eq","populate_markers_array","methods"],"sourceRoot":"","sources":["/home/pumuckl/Dokumente/code/ionic/dumpster-diving-ionic/src/views/SpotModal.vue"],"sourcesContent":["<template>\n    <!-- Sheet Modal -->\n    <ion-content>Modal Content\n\n    </ion-content>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { useCounterStore } from '@/stores/counter'\nimport { supabase } from \"@/supabase\"\n\nexport default defineComponent({\n  name: 'Tab2Page',\n  components: {\n    },\n  data: () => ({\n    spot: [],\n  }),\n  setup() {\n    const counter = useCounterStore()\n    // this.spot = counter.count\n    console.log(counter.count)\n  },\n  async created() {\n    const {data: events} = await supabase\n      .from('events')\n      .select('coordinates,name')\n      .eq('id', '1')\n      console.log(events)\n      this.populate_markers_array(events)\n    // this.loaded = true\n  },\n  methods: {\n  }\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}